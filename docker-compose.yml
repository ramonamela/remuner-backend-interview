version: "3.7"

services:
  remuner-backend:
    build:
      context: .
      target: remuner-backend-dev
    image: remuner-backend-dev
    volumes:
      - type: bind
        source: .
        target: /remuner-backend
    env_file:
     - .env
    ports:
      - "8000:80"
    networks:
      - default-net
    depends_on:
      - postgres
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"

  make_migrations:
    image: remuner-backend-dev
    env_file:
      - .env
    volumes:
      - type: bind
        source: .
        target: /remuner-backend
    networks:
      - default-net
    depends_on:
      - postgres
    entrypoint: aerich migrate

  migrate:
    image: remuner-backend-dev
    env_file:
      - .env
    volumes:
      - type: bind
        source: .
        target: /remuner-backend
    networks:
      - default-net
    depends_on:
      - postgres
    entrypoint: aerich upgrade

  postgres:
    image: postgres:13.4-alpine3.14
    environment:
      - POSTGRES_DB=${PSQL_DB_DATABASE}
      - POSTGRES_USER=${PSQL_DB_USERNAME}
      - POSTGRES_PASSWORD=${PSQL_DB_PASSWORD}
    env_file:
     - .env
    volumes:
      - type: volume
        source: postgres-remuner-backend-data
        target: /var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${PSQL_DB_USERNAME}
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - default-net

  redis:
    image: redis:5.0.7
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - default-net

  format:
    build:
      context: .
      target: remuner-backend-dev
    image: remuner-backend-dev
    volumes:
      - type: bind
        source: .
        target: /remuner-backend
    entrypoint: sh -c "black --config .black . && ruff check --fix"
    depends_on:
      - black

  black:
    image: remuner-backend-dev:latest
    volumes:
      - type: bind
        source: ./
        target: /remuner-backend
        read_only: true
    entrypoint: black --config .black --check --diff .

  format_black:
    image: remuner-backend-dev:latest
    volumes:
      - type: bind
        source: ./
        target: /remuner-backend
    entrypoint: black --config .black .

volumes:
  postgres-remuner-backend-data:

networks:
  default-net: